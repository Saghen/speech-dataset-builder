diff --git a/node_modules/segfault-handler/binding.gyp b/node_modules/segfault-handler/binding.gyp
index 06690a9..35374f0 100644
--- a/node_modules/segfault-handler/binding.gyp
+++ b/node_modules/segfault-handler/binding.gyp
@@ -18,7 +18,8 @@
           ]
         }]
       ],
-      "cflags": [ "-O0", "-funwind-tables" ],
+      "cflags": [ "-O0", "-funwind-tables", "-std=c++17" ],
+      "cflags_cc": [ "-std=c++17" ],
       "xcode_settings": {
         "MACOSX_DEPLOYMENT_TARGET": "10.9",
         "OTHER_CFLAGS": [ "-O0", "-funwind-tables" ],
diff --git a/node_modules/segfault-handler/build/Makefile b/node_modules/segfault-handler/build/Makefile
index d2aea19..75aa53c 100644
--- a/node_modules/segfault-handler/build/Makefile
+++ b/node_modules/segfault-handler/build/Makefile
@@ -47,6 +47,7 @@ CXXFLAGS.target ?= $(CPPFLAGS) $(CXXFLAGS)
 LINK.target ?= $(LINK)
 LDFLAGS.target ?= $(LDFLAGS)
 AR.target ?= $(AR)
+PLI.target ?= pli
 
 # C++ apps need to be linked with g++.
 LINK ?= $(CXX.target)
@@ -60,6 +61,7 @@ CXXFLAGS.host ?= $(CPPFLAGS_host) $(CXXFLAGS_host)
 LINK.host ?= $(CXX.host)
 LDFLAGS.host ?= $(LDFLAGS_host)
 AR.host ?= ar
+PLI.host ?= pli
 
 # Define a dir function that can handle spaces.
 # http://www.gnu.org/software/make/manual/make.html#Syntax-of-Functions
@@ -133,6 +135,9 @@ quiet_cmd_copy = COPY $@
 # send stderr to /dev/null to ignore messages when linking directories.
 cmd_copy = ln -f "$<" "$@" 2>/dev/null || (rm -rf "$@" && cp -af "$<" "$@")
 
+quiet_cmd_symlink = SYMLINK $@
+cmd_symlink = ln -sf "$<" "$@"
+
 quiet_cmd_alink = AR($(TOOLSET)) $@
 cmd_alink = rm -f $@ && $(AR.$(TOOLSET)) crs $@ $(filter %.o,$^)
 
@@ -145,6 +150,31 @@ cmd_alink_thin = rm -f $@ && $(AR.$(TOOLSET)) crsT $@ $(filter %.o,$^)
 quiet_cmd_link = LINK($(TOOLSET)) $@
 cmd_link = $(LINK.$(TOOLSET)) -o $@ $(GYP_LDFLAGS) $(LDFLAGS.$(TOOLSET)) -Wl,--start-group $(LD_INPUTS) $(LIBS) -Wl,--end-group
 
+# Note: this does not handle spaces in paths
+define xargs
+  $(1) $(word 1,$(2))
+$(if $(word 2,$(2)),$(call xargs,$(1),$(wordlist 2,$(words $(2)),$(2))))
+endef
+
+define write-to-file
+  @: >$(1)
+$(call xargs,@printf "%s\n" >>$(1),$(2))
+endef
+
+OBJ_FILE_LIST := ar-file-list
+
+define create_archive
+        rm -f $(1) $(1).$(OBJ_FILE_LIST); mkdir -p `dirname $(1)`
+        $(call write-to-file,$(1).$(OBJ_FILE_LIST),$(filter %.o,$(2)))
+        $(AR.$(TOOLSET)) crs $(1) @$(1).$(OBJ_FILE_LIST)
+endef
+
+define create_thin_archive
+        rm -f $(1) $(OBJ_FILE_LIST); mkdir -p `dirname $(1)`
+        $(call write-to-file,$(1).$(OBJ_FILE_LIST),$(filter %.o,$(2)))
+        $(AR.$(TOOLSET)) crsT $(1) @$(1).$(OBJ_FILE_LIST)
+endef
+
 # We support two kinds of shared objects (.so):
 # 1) shared_library, which is just bundling together many dependent libraries
 # into a link line.
@@ -308,8 +338,8 @@ ifeq ($(strip $(foreach prefix,$(NO_LOAD),\
 endif
 
 quiet_cmd_regen_makefile = ACTION Regenerating $@
-cmd_regen_makefile = cd $(srcdir); /home/saghen/.nvm/versions/node/v18.11.0/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py -fmake --ignore-environment "-Dlibrary=shared_library" "-Dvisibility=default" "-Dnode_root_dir=/home/saghen/.cache/node-gyp/18.11.0" "-Dnode_gyp_dir=/home/saghen/.nvm/versions/node/v18.11.0/lib/node_modules/npm/node_modules/node-gyp" "-Dnode_lib_file=/home/saghen/.cache/node-gyp/18.11.0/<(target_arch)/node.lib" "-Dmodule_root_dir=/tmp/tmp-327392515F054Dn1lqD/node_modules/segfault-handler" "-Dnode_engine=v8" "--depth=." "-Goutput_dir=." "--generator-output=build" -I/tmp/tmp-327392515F054Dn1lqD/node_modules/segfault-handler/build/config.gypi -I/home/saghen/.nvm/versions/node/v18.11.0/lib/node_modules/npm/node_modules/node-gyp/addon.gypi -I/home/saghen/.cache/node-gyp/18.11.0/include/node/common.gypi "--toplevel-dir=." binding.gyp
-Makefile: $(srcdir)/../../../../home/saghen/.nvm/versions/node/v18.11.0/lib/node_modules/npm/node_modules/node-gyp/addon.gypi $(srcdir)/binding.gyp $(srcdir)/build/config.gypi $(srcdir)/../../../../home/saghen/.cache/node-gyp/18.11.0/include/node/common.gypi
+cmd_regen_makefile = cd $(srcdir); /mnt/storage/code/ml/tts/maker/node_modules/node-gyp/gyp/gyp_main.py -fmake --ignore-environment "-Dlibrary=shared_library" "-Dvisibility=default" "-Dnode_root_dir=/home/saghen/.cache/node-gyp/18.11.0" "-Dnode_gyp_dir=/mnt/storage/code/ml/tts/maker/node_modules/node-gyp" "-Dnode_lib_file=/home/saghen/.cache/node-gyp/18.11.0/<(target_arch)/node.lib" "-Dmodule_root_dir=/mnt/storage/code/ml/tts/maker/node_modules/segfault-handler" "-Dnode_engine=v8" "--depth=." "-Goutput_dir=." "--generator-output=build" -I/mnt/storage/code/ml/tts/maker/node_modules/segfault-handler/build/config.gypi -I/mnt/storage/code/ml/tts/maker/node_modules/node-gyp/addon.gypi -I/home/saghen/.cache/node-gyp/18.11.0/include/node/common.gypi "--toplevel-dir=." binding.gyp
+Makefile: $(srcdir)/build/config.gypi $(srcdir)/../../../../../../../../home/saghen/.cache/node-gyp/18.11.0/include/node/common.gypi $(srcdir)/binding.gyp $(srcdir)/../node-gyp/addon.gypi
 	$(call do_cmd,regen_makefile)
 
 # "all" is a concatenation of the "all" targets from all the included
diff --git a/node_modules/segfault-handler/build/config.gypi b/node_modules/segfault-handler/build/config.gypi
index 1b041c6..f14564a 100644
--- a/node_modules/segfault-handler/build/config.gypi
+++ b/node_modules/segfault-handler/build/config.gypi
@@ -381,12 +381,12 @@
     "want_separate_host_toolset": 0,
     "nodedir": "/home/saghen/.cache/node-gyp/18.11.0",
     "standalone_static_library": 1,
+    "save_dev": "true",
     "userconfig": "/home/saghen/.npmrc",
     "cache": "/home/saghen/.npm",
-    "local_prefix": "/tmp/tmp-327392515F054Dn1lqD",
+    "local_prefix": "/mnt/storage/code/ml/tts/maker",
     "globalconfig": "/home/saghen/.local/etc/npmrc",
     "init_module": "/home/saghen/.npm-init.js",
-    "force": "true",
     "prefix": "/home/saghen/.local",
     "user_agent": "npm/8.19.2 node/v18.11.0 linux x64 workspaces/false",
     "metrics_registry": "https://registry.npmjs.org/",
